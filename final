import cv2
import numpy as np
from unitree_sdk import Robot  # Asegúrate de que el SDK de Unitree está correctamente instalado y accesible.

def connect_to_robot():
    # Conectar al robot Unitree Go1
    robot = Robot()
    robot.initialize()  # Inicializar la conexión con el robot
    return robot

def adjust_blue_tone(frame, blue_decrease=23, blue_boost=30):
    b, g, r = cv2.split(frame)
    b = cv2.subtract(b, np.full(b.shape, blue_decrease, dtype=np.uint8))
    b = cv2.add(b, np.full(b.shape, blue_boost, dtype=np.uint8))
    return cv2.merge((b, g, r))

def follow_color(frame):
    # Rango de color verde en el espacio HSV
    GREEN_LOW = np.array([40, 100, 100], np.uint8)
    GREEN_HIGH = np.array([100, 255, 255], np.uint8)
    
    frame_hsv = cv2.cvtColor(frame, cv2.COLOR_BGR2HSV)
    mask_green = cv2.inRange(frame_hsv, GREEN_LOW, GREEN_HIGH)
    contours, _ = cv2.findContours(mask_green, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)
    
    x_center = None  
    y_center = None

    for contour in contours:
        area = cv2.contourArea(contour)
        if area < 500:
            continue

        M = cv2.moments(contour)
        if M["m00"] != 0:
            x_center = int(M["m10"] / M["m00"])
            y_center = int(M["m01"] / M["m00"])

            cv2.circle(frame, (x_center, y_center), 7, (0, 255, 0), -1)
            cv2.putText(frame, f"({x_center}, {y_center})", (x_center + 10, y_center - 10), cv2.FONT_HERSHEY_SIMPLEX, 0.5, (255, 255, 255), 1)

        # Ajustar la zona de interés
        if x_center and y_center:
            return x_center, y_center

    return None, None  

def control_robot(robot, x, y):
    
    robot_speed = 0.1 
    
   
    if x is not None:
        if x < 271:
            print("Rotar a la derecha")
            robot.rotate_speed(0, -robot_speed)  
        elif x > 279:
            print("Rotar a la izquierda")
            robot.rotate_speed(0, robot_speed)  
        elif 271 <= x <= 279:
            print("Avanzar")
            robot.forward_speed(robot_speed)  
    else:
        print("Esperando rastros de color verde...")

def main():
    
    robot = connect_to_robot()

   
    cap = cv2.VideoCapture(0)
    while True:
        ret, frame = cap.read()
        if not ret:
            print("Error al capturar el fotograma.")
            break

      
        adjusted_frame = adjust_blue_tone(frame)
        x, y = follow_color(adjusted_frame)

       
        control_robot(robot, x, y)

       
        cv2.imshow('Imagen procesada', adjusted_frame)

        if cv2.waitKey(1) & 0xFF == ord('q'):
            break

    cap.release()
    cv2.destroyAllWindows()

if _name_ == "_main_":
    main()
